version: '3.5'

services:
  ingress:
    image: nginx:1.19.2-alpine
    container_name: ingress
    networks:
      - ingress
    # HTTP and HTTPS ports
    ports:
      - 80:80
      - 443:443
    volumes:
      # Persistence volumes, mounted read-only.
      - conf:/etc/nginx/conf.d:ro
      - certs:/etc/nginx/certs:ro
      - vhost:/etc/nginx/vhost.d:ro
      - html:/usr/share/nginx/html:ro
      - dhparam:/etc/nginx/dhparam:ro

  dockergen:
    image: jwilder/docker-gen:0.7.0
    container_name: dockergen
    networks:
      - ingress
    # Generate new configuration and send SIGHUP to ingress container on state change
    command: -notify-sighup ingress -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      # Nginx template to use
      - ./templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl
      # Docker socket
      - /var/run/docker.sock:/tmp/docker.sock:ro
      # Persistence volumes
      - certs:/etc/nginx/certs:ro
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.13
    container_name: letsencrypt
    networks:
      - ingress
    environment:
      # Fallback to this email if client container does not define LETSENCRYPT_EMAIL environment variable
      DEFAULT_EMAIL: info@glacion.com
      # Name to the dockergen container
      NGINX_DOCKER_GEN_CONTAINER: dockergen
      # Name to the ingress container
      NGINX_PROXY_CONTAINER: ingress
    volumes:
      # Docker socket to listen to container changes
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Persistence volumes
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html

# Volumes for data persistence
volumes:
  conf:
  certs:
  vhost:
  html:
  dhparam:

# Define a global network
networks:
  ingress:
    name: gateway
